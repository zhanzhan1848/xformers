name: Build xformers for Windows + CUDA 12.4

on:
  workflow_dispatch:  # 支持手动触发
    inputs:
      release_tag:
        description: 'Release tag to fetch the zip from'
        required: true
        default: 'latest'

env:
  # you need at least cuda 5.0 for some of the stuff compiled here.
  TORCH_CUDA_ARCH_LIST: 6.0+PTX 7.0 7.5 8.0+PTX
  HIP_ARCHITECTURES: ''
  MAX_JOBS: 4
  DISTUTILS_USE_SDK: 1 # otherwise distutils will complain on windows about multiple versions of msvc
  XFORMERS_BUILD_TYPE: "Release"
  TWINE_USERNAME: __token__
  XFORMERS_PACKAGE_FROM: "wheel-main"

jobs:
  install:
    runs-on: windows-2022
    defaults:
      run:
        shell: bash
    env:
      CUDA_VERSION: "12.4"  # CUDA 版本
    steps:
    - name: Enable Long Path
      if: runner.os == 'Windows'
      run: git config --system core.longpaths true

    - name: Checkout code without checking out submodules
      uses: actions/checkout@v3
      with:
        submodules: true
        
    - run: git submodule update --init --recursive

    - name: Install Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Verify third-party dependencies
      run: |
        echo "Checking third-party folder structure..."
        dir third_party
        dir third_party/flash-attention

    - name: Setup Runner
      uses: ./.github/actions/setup-build-cuda
      with:
        toolkit_type: 'cuda'
        toolkit_short_version: '124'
        python: '3.10'

    - name: Define version
      id: xformers_version
      env:
        VERSION_SOURCE: ${{ github.ref_type == 'tag' && 'tag' || 'dev'  }}
      run: |
        set -Eeuo pipefail
        git config --global --add safe.directory "*"
        version=`python .github/compute_wheel_version.py --source $VERSION_SOURCE`
        echo $version > version.txt
        echo "BUILD_VERSION=$version${{ steps.cuda_info.outputs.CUDA_VERSION_SUFFIX }}" >> ${GITHUB_ENV}
        echo "BUILD_VERSION=$version${{ steps.cuda_info.outputs.CUDA_VERSION_SUFFIX }}" >> ${GITHUB_OUTPUT}
        which ninja
        cat ${GITHUB_ENV}
    - run: echo "xformers-${BUILD_VERSION}"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install torch==2.5.1+cu124 torchvision==0.20.1+cu124 torchaudio==2.5.1+cu124 --index-url https://download.pytorch.org/whl/cu124
        python -m pip install -r requirements.txt

    - name: Build wheel
      run: |
          python setup.py bdist_wheel -d dist/ -k $PLAT_ARG
      env:
        PLAT_ARG: ''

    - uses: actions/upload-artifact@v4
      with:
        name: xformers-0.0.28post3+cu124-py310-torch2.5.1
        path: dist/*.whl
