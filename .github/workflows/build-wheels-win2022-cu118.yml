name: Build xformers for Windows + CUDA 11.8

on:
  workflow_dispatch:  # 支持手动触发
    inputs:
      release_tag:
        description: 'Release tag to fetch the zip from'
        required: true
        default: 'latest'

jobs:
  install:
    runs-on: windows-2022
    env:
      CUDA_VERSION: "11.8"  # CUDA 版本
    steps:
    - name: Enable long paths
      run: |
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

    - if: runner.os == 'Windows'
      run: git config --system core.longpaths true

    - name: Checkout code without checking out submodules
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Install Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install CUDA Toolkit 11.8
      run: |
        choco install cuda --version=11.8 -y
        setx PATH "C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.8\bin;%PATH%"

    - name: Verify third-party dependencies
      run: |
        echo "Checking third-party folder structure..."
        dir third_party
        dir third_party/flash-attention

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install torch==2.5.1+cu118 torchvision==0.16.1+cu118 torchaudio==2.5.1+cu118 --index-url https://download.pytorch.org/whl/cu118
        python -m pip install -r requirements.txt

    - name: Build xformers wheel
      run: |
        python setup.py bdist_wheel

    - name: Upload build artifact
      uses: actions/upload-artifact@v3
      with:
        name: xformers-windows-cu118
        path: dist/

  build:
    needs: install
    uses: ./.github/workflows/wheels_build.yml
    with:
      os: 'win'
      python: '3.10'
      torch_version: '2.5.1'
      toolkit_type: 'cuda'
      toolkit_short_version: '118'

  release:
    needs: build
    runs-on: windows-2022
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: xformers-windows-cu118

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: "v${{ github.run_number }}"
        release_name: "Windows CUDA 11.8 Build - Python 3.10"
        draft: false
        prerelease: false

    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create-release.outputs.upload_url }}
        asset_path: dist/
        asset_name: "xformers-0.0.28post3+cu118_cp310_cp310-win_amd64.whl"
        asset_content_type: application/zip
