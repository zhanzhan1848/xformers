name: Build xformers for Windows + CUDA 11.8

on:
  workflow_dispatch:  # 支持手动触发
    inputs:
      release_tag:
        description: 'Release tag to fetch the zip from'
        required: true
        default: 'latest'

jobs:
  install:
    runs-on: windows-2022
    env:
      CUDA_VERSION: "11.8"  # CUDA 版本
    steps:
    - name: Enable long paths
      run: |
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

    - if: runner.os == 'Windows'
      run: git config --system core.longpaths true

    - name: Checkout code without checking out submodules
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Install Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install CUDA Toolkit 11.8
      run: |
        choco install cuda --version=11.8 -y
        setx PATH "C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.8\bin;%PATH%"

    - name: Verify third-party dependencies
      run: |
        echo "Checking third-party folder structure..."
        dir third_party
        dir third_party/flash-attention

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install torch==2.5.1+cu118 torchvision==0.16.1+cu118 torchaudio==2.5.1+cu118 --index-url https://download.pytorch.org/whl/cu118
        python -m pip install -r requirements.txt

    - name: Build wheel
      run: |
          $PY setup.py bdist_wheel -d dist/ -k $PLAT_ARG
      env:
        PLAT_ARG: ${{ contains(inputs.os, 'ubuntu') && '--plat-name manylinux_2_28_x86_64' || '' }}

    - uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.os }}-py${{ inputs.python }}-torch${{ inputs.torch_version }}+${{ contains(inputs.toolkit_type, 'cuda') && 'cu' || 'rocm' }}${{ inputs.toolkit_short_version }}_${{ inputs.artifact_tag }}
        path: dist/*.whl
